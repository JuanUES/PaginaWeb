--- Hacer funcionar el proyecto laravel 
    en pc que clono el repositorio de github ---

1. composer install
2. cp .env.example .env
3. php artisan key:generate
4. php artisan migrate:fresh --seed
5. php artisan serve

--Codificicacion-------------------------------------------------------

$cod_url = urlencode($cadena);
$deco_url = urldecode($cod_url);
base64_encode($cadena)
$codifica1 =  base64_encode($codifica1);
$decodifica2 = base64_decode($codifica1);

$codifica3 = convert_uuencode($cadena);
$decodifica4 = convert_uudecode($codifica3);

--Crear un modelo-------------------------------------------------------
php artisan make:model <Aqui donde y como se llamara> -m

--Crear un controlador con el modelo--
php artisan make:Controller <Nombre de controlador>  --resource --model=<Nombre del Modelo>

--Imprimir en la consola de laravel artisan serve ---------------------
$out = new \Symfony\Component\Console\Output\ConsoleOutput();
$out->writeln('<Aqui va la variable o cadena a imprimir>');   

--Ejecutar proyecto---------------------------------------------------
cd s <Luego de escribir eso presionar la tecla Tab>
php artisan serve

--Para generar un seeder utilizamos el comando de Artisan make:seeder seguido del nombre del seeder--
php artisan make:seeder ProfessionSeeder

--Crear nuevos atributos en tablas ya creadas en la base usando tinker---------

php artisan tinker

Illuminate\Support\Facades\Schema::table('users',function (Illuminate\Database\Schema\Blueprint $table) {
    $table->boolean('estado')->default(0);
    $table->bigInteger('empleado') -> nullable();;
            $table->foreign('empleado')
            ->references('id')
            ->on('empleado');
});

Illuminate\Support\Facades\Schema::table('maestrias',function (Illuminate\Database\Schema\Blueprint $table) {
    $table->Integer('categoria');

});
quit

php artisan storage:link

/** Limpiar Cache*/
php artisan cache:clear
php artisan config:clear
php artisan config:cache


composer dump-autoload